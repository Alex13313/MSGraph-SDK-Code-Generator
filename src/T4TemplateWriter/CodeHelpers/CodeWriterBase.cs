using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using Vipr.Core.CodeModel;
using Vipr.T4TemplateWriter.Extensions;

namespace Vipr.T4TemplateWriter.CodeHelpers
{
    abstract public class CodeWriterBase
    {

        private String defaultHeader =
@"// ------------------------------------------------------------------------------
//  **NOTE** This code was generated by a tool and will occasionally be
//  overwritten. We welcome comments and issues regarding this code; they will be
//  addressed in the generation tool. If you wish to submit pull requests, please
//  do so for the templates in that tool.
//
//  This code was generated by Vipr (https://github.com/microsoft/vipr) using
//  the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).
//
//  Copyright (c) 2015 Microsoft Corporation
//
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the ""Software""), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
// ------------------------------------------------------------------------------";


        public OdcmModel CurrentModel { get; set; }

        public CodeWriterBase() : this(null) { }

        public CodeWriterBase(OdcmModel model)
        {
            this.CurrentModel = model;
        }

        public static String Write(params String[] args)
        {
            StringBuilder sb = new StringBuilder();
            foreach (String arg in args)
            {
                sb.Append(arg);
            }
            return sb.ToString();
        }

        abstract public String WriteOpeningCommentLine();
        abstract public String WriteClosingCommentLine();

        abstract public String WriteInlineCommentChar();

        public String WriteHeader()
        {
            return Write(new String[] {
                WriteOpeningCommentLine(),
                defaultHeader,
                WriteClosingCommentLine()
              });
        }
    }
}
