<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseTemplate.tt"#>
<#@ output extension="\\" #>
<#=GetCommentHeader()#>

<#
CustomHost host = (CustomHost)Host;
var entity = host.OdcmType.AsOdcmClass();
var entityName = GetPrefix() + entity.Name + "Fetcher";
var extends =  (entity.Kind == OdcmClassKind.MediaEntity ? "MSODataMediaEntityFetcher<": "MSODataEntityFetcher<") + entityName+ "Protocol>";
var clasess = new List<string>();

foreach(var prop in entity.NavigationProperties())
{
	var fetcher = string.Empty;
	fetcher = GetPrefix() + prop.Type.Name + "Fetcher;";

	if(!clasess.Contains(fetcher)) clasess.Add(fetcher);

	if(prop.IsCollection)
	{
		var collectionFetcher = GetPrefix() + prop.Type.Name + "CollectionFetcher;";

		if(!clasess.Contains(collectionFetcher)) clasess.Add(collectionFetcher);
	}
}

foreach(var child in entity.Derived)
{
	var fetcher = string.Empty;
	fetcher = GetPrefix() + child.Name + "Fetcher;";

	if(!clasess.Contains(fetcher)) clasess.Add(fetcher);
}

foreach(var propertyClass in clasess)
{

#>
@class <#=propertyClass#>
<#

}

#>
@class <#=GetPrefix() + entity.Name#>Operations;
@class <#=GetPrefix() + entity.Name#>Fetcher;

#import <office365_odata_base/office365_odata_base.h>
#import "<#=GetPrefix()#>Models.h"

<#=GetHeaderDoc(entityName)#>
@protocol <#=entityName#>Protocol<MSODataEntityFetcher>

@optional

- (NSURLSessionTask *) readWithCallback:(void (^)(<#=GetPrefix() + entity.Name#> *<#=entity.Name.ToLowerFirstChar()#>, MSODataException *exception))callback;
- (<#=GetPrefix() + entity.Name#>Fetcher *)addCustomParametersWithName:(NSString *)name value:(id)value;
- (<#=GetPrefix() + entity.Name#>Fetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value;
- (<#=GetPrefix() + entity.Name#>Fetcher *)select:(NSString *)params;
- (<#=GetPrefix() + entity.Name#>Fetcher *)expand:(NSString *)value;

@required

@property (copy, nonatomic, readonly) <#=GetPrefix() + entity.Name#>Operations *operations;

@end

@interface <#=entityName#> : <#=extends#>

- (instancetype)initWithUrl:(NSString*)urlComponent parent:(id<MSODataExecutable>)parent;
- (NSURLSessionTask *)update:(<#=GetPrefix() + entity.Name#> *)<#=entity.Name.ToLowerFirstChar()#> callback:(void(^)(<#=GetPrefix() + entity.Name#> *<#=entity.Name.ToLowerFirstChar()#>, MSODataException *error))callback;
- (NSURLSessionTask *)delete:(void(^)(int status, MSODataException *exception))callback;

<#
		
foreach(var prop in entity.NavigationProperties())
{
	if(prop.IsCollection)
	{

#>
@property (retain, nonatomic, readonly, getter=<#=prop.Name.ToLowerFirstChar()#>) <#=GetPrefix() + prop.Type.Name#>CollectionFetcher *<#=prop.Name.ToLowerFirstChar()#>;

- (<#=GetPrefix() + prop.Type.Name#>Fetcher *)get<#=prop.Name.ToUpperFirstChar()#>ById:(NSString*)id;

<#

	}
	else
	{

#>

@property (retain, nonatomic, readonly, getter=<#=prop.Name.ToLowerFirstChar()#>) <#=GetPrefix() + prop.Type.Name#>Fetcher *<#=prop.Name.ToLowerFirstChar()#>;
<#		
			
	}
}

foreach(var child in entity.Derived)
{

#>
- (<#=GetPrefix() + child.Name#>Fetcher *)as<#=child.Name.ToUpperFirstChar()#>;	
<#

}

#>

@end