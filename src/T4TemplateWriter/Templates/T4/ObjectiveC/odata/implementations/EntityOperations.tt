<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseTemplate.tt"#>
<#@ output extension="\\" #>
<#=GetCommentHeader()#>
<#
CustomHost host = (CustomHost)Host;
var entity = host.OdcmType.AsOdcmClass();	
var entityName = GetPrefix() + entity.Name + "Operations";

#>

#import "<#=GetPrefix()#>ODataEntities.h"

<#=GetImplementationDoc(entityName)#>
@implementation <#=entityName#>

- (instancetype)initWithUrl:(NSString *)urlComponent parent:(id<MSODataExecutable>)parent {
 
    return [super initOperationWithUrl:urlComponent parent:parent];
}

<#
if(entity.HasActions())
{
	foreach(var action in entity.Actions())
	{
		if(!action.IsBoundToCollection)
		{
			var clazz = action.ReturnType.IsComplex() ? "[" + action.ReturnType.GetTypeString() + " class]" : "nil";

			if (action.IsFunction())
			{
#>
<#=GetMethodHeader(action)#> {

	id<MSODataRequest> request = [self.resolver createODataRequest];
	<#=GetFunctionParameters(action.Parameters)#>
	
	NSString *parameters = [MSODataBaseContainerHelper getFunctionParameters:params];

	[request.url appendPathComponent:[[NSString alloc] initWithFormat:@"<#= action.Name#>(%@)",parameters]];
	[request setVerb:HTTP_VERB_POST];

	NSURLSessionTask *task = [super oDataExecuteRequest:request 
											   callback:^(id<MSODataResponse> response, MSODataException *exception) {
       
	   if (error == nil) {

			<#=GetTypeForAction(action)#> result = (<#=GetTypeForAction(action)#>)[super.resolver.jsonSerializer deserialize:response.data asClass:<#=clazz#>];
            callback(result, exception);
        }
        else {

            callback(<#=action.ReturnType.IsComplex() ? "nil" : " response.status"#>, exception);
        }
    }];
    
    return task;
}
<#			
    		}
    		else if(action != null)
    		{
#>
<#=GetMethodHeader(action)#> {
	<#=GetParametersToJson(action.Parameters)#>
	NSURLSessionTask *task = [self <#= action.Name.ToLowerFirstChar() #>Raw<#=GetParametersForRawCall(action.Parameters.Select(p => p.Name))#>:^(NSString *returnValue, MSODataException *exception) {
       
	   if (exception == nil) {

			<#=GetTypeForAction(action)#> result = (<#=GetTypeForAction(action)#>)[super.resolver.jsonSerializer deserialize:[returnValue dataUsingEncoding:NSUTF8StringEncoding] asClass:<#=clazz#>];
            callback(result, exception);
        } 
		else {

            callback(<#=action.ReturnType.IsComplex() ? "nil" : "(int)[returnValue integerValue]"#>, exception);
        }
    }];
    
    return task;
}

<#=GetMethodHeaderRaw(action)#> {

	id<MSODataRequest> request = [super.resolver createODataRequest];
	<#=GetParametersToJsonRaw(action.Parameters.Select(p => p.Name))#>
	[request.url appendPathComponent:@"<#= action.Name#>"];
	[request setVerb:HTTP_VERB_POST];

	NSURLSessionTask *task = [super oDataExecuteRequest:request 
											   callback:^(id<MSODataResponse> response, MSODataException *exception) {
        
		if (exception == nil) {
            
			callback([[NSString alloc] initWithData:response.data encoding:NSUTF8StringEncoding], exception);
        }
        else {

            callback([[NSString alloc] initWithFormat:@"%d", response.status], exception);
        }
    }];
    
    return task;
}
    				
<#			}
		}
	}
}
#>
@end