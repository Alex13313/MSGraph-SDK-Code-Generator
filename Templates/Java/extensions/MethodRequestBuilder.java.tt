<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#
    OdcmMethod current = (OdcmMethod)currentType;
    var methodClass = current.Class.Name.ToUpperFirstChar();
    var currentName = methodClass + current.Name.Substring(current.Name.IndexOf('.') + 1).ToUpperFirstChar();

    StringBuilder parameterSignatureBuilder = new StringBuilder();
    StringBuilder parameterValuesBuilder = new StringBuilder();

    Tuple<string, string>[] stuff = new Tuple<string, string>[] {Tuple.Create("ItemReference", "itemReference")};
    foreach (var param in current.Parameters)
    {
        var paramType = param.Type.GetTypeString();
        var paramName = param.Name.ToLowerFirstChar();
    	parameterSignatureBuilder.AppendFormat(", final {0} {1}", paramType, paramName);
    	parameterValuesBuilder.AppendFormat(", {0}", paramName);
    }
#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

<#=CreateClassDef(currentName + "RequestBuilder", "Base" + currentName + "RequestBuilder", "I" + currentName + "RequestBuilder")#>

    /**
     * The request builder for this <#=currentName#>
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param options The options for this request
     */
    public <#=currentName#>RequestBuilder(final String requestUrl, final IOneDriveClient client, final List<Option> options<#=parameterSignatureBuilder.ToString()#>) {
        super(requestUrl, client, options<#=parameterValuesBuilder.ToString()#>);
    }
}
