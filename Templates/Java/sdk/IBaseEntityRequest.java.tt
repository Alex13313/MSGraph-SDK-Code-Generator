<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#
    OdcmClass current = (OdcmClass)currentType;
    var entityName = current.Name.ToUpperFirstChar();
#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(model)#>

/**
 * I am generated by IEntityRequest.java.tt (Might not be implemented)
 *
 * I always reference the base item, Drive, and use ICallback<Drive>
 * I have the full CRUD complement of functions
 * I never return myself, and instead only use and return (I)DriveRequest, etc.
 */
<#=CreateInterfaceDef("IBase" + entityName + "Request")#>
    void get(final ICallback<<#=entityName#>> callback);

    void update(final <#=entityName#> source<#=entityName#>, final ICallback<<#=entityName#>> callback);

    void delete(final <#=entityName#> source<#=entityName#>, final ICallback<Void> callback); //This needs to be Void typed

    void create(final <#=entityName#> new<#=entityName#>, final ICallback<<#=entityName#>> callback);

    IBase<#=entityName#>Request select(final String value);

}