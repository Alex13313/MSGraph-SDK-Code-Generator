<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension="\\" #>
<#
CustomT4Host host       = (CustomT4Host) Host;
OdcmModel model         = host.CurrentModel;
CodeWriterJava writer   = (CodeWriterJava) host.CodeWriter;
var clientName = model.GetEntityContainer().ToUpperFirstChar() + "Client";
var clientNameLower = clientName.ToLowerFirstChar();
var entity = host.CurrentType as OdcmProperty;
var entityName = entity.Name.ToUpperFirstChar();
var collectionRequest = entityName + "CollectionRequest";
var collectionRequestBuilder = collectionRequest + "Builder";
var entityRequestBuilder = entity.Type.Name.ToUpperFirstChar() + "RequestBuilder";

#>
<#=writer.WriteHeader()#>

package com.onedrive.sdk.generated;

import com.onedrive.sdk.*;
import com.onedrive.sdk.extensions.*;
import com.onedrive.sdk.options.*;

import java.util.*;

/**
 * The type <#=collectionRequestBuilder#>.
 */
public class Base<#=collectionRequestBuilder#> extends BaseRequestBuilder {
    /**
     * Constructs a new <#=collectionRequestBuilder#>.
     *
     * @param requestUrl The URL for the built request.
     * @param <#=clientNameLower#> The I<#=clientName#> for handling requests.
     */
    public <#=collectionRequestBuilder#>(final String requestUrl, final I<#=clientName#> <#=clientNameLower#>) {
        super(requestUrl, <#=clientNameLower#>);
    }

    /**
     * Builds the request.
     *
     * @returns The built request.
     */
    public I<#=collectionRequest#> Request() {
        return this.Request(null);
    }

    /**
     * Builds the request.
     *
     * @param options The query and header options for the request.
     * @returns The built request.
     */
    public I<#=collectionRequest#> Request(final List<Option> options) {
        return new <#=collectionRequest#>(this.RequestUrl, this.<#=clientName#>, options);
    }

    /**
     * Gets an I<#=entityRequestBuilder#> for the specified <#=entityName#>.
     *
     * @param id The ID for the <#=entityName#>.
     * @returns The I<#=entityRequestBuilder#>.
     */
    public I<#=entityRequestBuilder#> get(final String id) {
        return new <#=entityRequestBuilder#>(this.AppendSegmentToRequestUrl(id), this.<#=entityName#>);
    }
}