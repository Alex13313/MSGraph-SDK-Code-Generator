
<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = BaseTypeReferenceRequestBuilder(c);#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

<#=CreateClassDef(BaseTypeReferenceRequestBuilder(c), "BaseRequestBuilder", IBaseTypeReferenceRequestBuilder(c))#>

    /**
     * The request builder for the <#=TypeName(c)#>
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param requestOptions The options for this request
     */
    public <#=BaseTypeReferenceRequestBuilder(c)#>(final String requestUrl, final <#=IBaseClientType()#> client, final java.util.List<? extends Option> requestOptions) {
        super(requestUrl, client, requestOptions);
    }

    /**
     * Creates the request
     *
     * @return The <#=ITypeReferenceRequest(c)#> instance
     */
    public <#=ITypeReferenceRequest(c)#> buildRequest() {
        return buildRequest(getOptions());
    }

    /**
     * Creates the request with specific requestOptions instead of the existing requestOptions
     *
     * @param requestOptions The options for this request
     * @return The <#=ITypeReferenceRequest(c)#> instance
     */
    public <#=ITypeReferenceRequest(c)#> buildRequest(final java.util.List<? extends Option> requestOptions) {
        return new <#=TypeReferenceRequest(c)#>(getRequestUrl(), getClient(), requestOptions);
    }
}
