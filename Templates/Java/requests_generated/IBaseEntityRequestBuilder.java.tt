<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseJavaModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = IBaseTypeRequestBuilder(c);#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

<#=CreateInterfaceDef(IBaseTypeRequestBuilder(c), "IRequestBuilder")#>
    /**
     * Creates the request
     */
    <#=ITypeRequest(c)#> buildRequest();

    /**
     * Creates the request with specific options instead of the existing options
     */
    <#=ITypeRequest(c)#> buildRequest(final java.util.List<? extends Option> requestOptions);
<#
if (c.AsOdcmClass() != null)
{
    foreach(var child in c.AsOdcmClass().Derived)
    {
        var childName = child.Name.ToCheckedCase();
#>

    <#=ITypeRequestBuilder(child)#> <#=childName.ToLowerFirstChar()#>();
<#
    }
#>
<#
    foreach(var prop in c.AsOdcmClass().NavigationProperties())
    {
        var propName = prop.Name.ToUpperFirstChar();
		var sanitizedName = prop.Name.SanitizePropertyName();
        var propRequestBuilder = TypeRequestBuilder(prop);
        if (prop.IsCollection()) {
#>

    <#=ITypeCollectionRequestBuilder(prop)#> <#=sanitizedName.ToLowerFirstChar()#>();

    <#=ITypeRequestBuilder(prop)#> <#=prop.Name#>(final String id);
<#
        } else {
#>

    /**
     * Gets the request builder for <#=TypeName(prop)#>.
     */
    <#=ITypeRequestBuilder(prop)#> <#=sanitizedName.ToLowerFirstChar()#>();
<#
        }
    }
#>
<#
    foreach (var prop in c.AsOdcmClass().GetProperties(typeName:"Stream"))
    {
		var propName = prop.Name.ToCheckedCase();
		var sanitizedName = propName;

		if (c is OdcmMediaClass && propName == "Content") {
			 sanitizedName = prop.Type.GetReservedPrefix().ToCheckedCase() + prop.Name.ToCheckedCase();
		} else {
			sanitizedName = prop.Name.SanitizePropertyName();
		}

        var propRequestBuilder = TypeRequestBuilder(prop);
#>

    I<#=propRequestBuilder#> <#=sanitizedName#>();
<#
    }
#>
<#
    if (c is OdcmMediaClass)
    {
#>

    <#=ITypeStreamRequestBuilder(c)#> content();
<#
    }
#>
<#
    foreach (var method in c.AsOdcmClass().MethodsAndOverloads()) {
        if (method.IsBoundToCollection) {
            continue;
        }

        var parameterList = MethodParametersSignature(method);

        if (parameterList != "") {
            parameterList = parameterList.Remove(0, 2);
        }

		var sanitizedMethod = MethodName(method).SanitizePropertyName().ToLowerFirstChar();

        if (method.IsCollection) {
#>

    <#=ITypeCollectionRequestBuilder(method)#> <#=sanitizedMethod#>(<#=parameterList#>);
<#  } else { #>
    <#=ITypeRequestBuilder(method)#> <#=sanitizedMethod#>(<#=parameterList#>);
<#
        }
    }
}
#>

}
