<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#
    OdcmClass current = (OdcmClass)currentType;
    var currentName = current.Name.ToUpperFirstChar();
#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

<#=CreateClassDef("Base" + currentName + "Request", "BaseRequest", "IBase" + currentName + "Request")#>

    /**
     * The request for the <#=currentName#>
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param options The options for this request
     */
    public Base<#=currentName#>Request(String requestUrl, IOneDriveClient client, List<Option> options) {
        super(requestUrl, client, options, <#=currentName#>.class);
    }

    public void get(final ICallback<<#=currentName#>> callback) {
        send(HttpMethod.GET, callback, null);
    }

    public <#=currentName#> get() throws ClientException {
       return send(HttpMethod.GET, null);
    }

    public void update(final <#=currentName#> source<#=currentName#>, final ICallback<<#=currentName#>> callback) {
        send(HttpMethod.PATCH, callback, source<#=currentName#>);
    }

    public <#=currentName#> update(final <#=currentName#> source<#=currentName#>) throws ClientException {
        return send(HttpMethod.PATCH, source<#=currentName#>);
    }

    public void delete(final ICallback<Void> callback) {
        send(HttpMethod.DELETE, callback, null);
    }

    public void delete() throws ClientException {
        send(HttpMethod.DELETE, null);
    }

    public void create(final <#=currentName#> new<#=currentName#>, final ICallback<<#=currentName#>> callback) {
        send(HttpMethod.POST, callback, new<#=currentName#>);
    }

    public <#=currentName#> create(final <#=currentName#> new<#=currentName#>) throws ClientException {
        return send(HttpMethod.POST, new<#=currentName#>);
    }

    public I<#=currentName#>Request select(final String value) {
        getQueryOptions().add(new QueryOption("select", value));
        return (<#=currentName#>Request)this;
    }

    public I<#=currentName#>Request top(final int value) {
        getQueryOptions().add(new QueryOption("top", value+""));
        return (<#=currentName#>Request)this;
    }

    public I<#=currentName#>Request expand(final String value) {
        getQueryOptions().add(new QueryOption("expand", value));
        return (<#=currentName#>Request)this;
    }
}
