<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#
    OdcmMethod current = (OdcmMethod)currentType;
    var methodClass = current.Class.Name.ToUpperFirstChar();
    var currentName = current.Name.Substring(current.Name.IndexOf('.') + 1).ToUpperFirstChar();
#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

import com.google.gson.JsonObject;
import com.google.gson.annotations.*;

/**
 * I am auto generated by BaseMethodRequest.java.tt
 *
 * Drive should always been referenced, and Drive extends BaseDrive
 */
<#=CreateClassDef("Base" + methodClass + currentName + "Request",  "BaseRequest")#>
    public Base<#=methodClass + currentName#>Request(final String requestUrl, final IOneDriveClient client, final List<Option> options) {
        super(requestUrl, client, options, <#=methodClass + currentName#>Body.class);
    }

    public void get(final ICallback<<#=methodClass + currentName#>Body> callback) {
        this.send(HttpMethod.GET, callback, null);
    }

    public <#=methodClass + currentName#>Body get() throws OneDriveClientException {
        return this.send(HttpMethod.GET, null);
    }

    public I<#=methodClass + currentName#>Request select(final String value) {
        this.mQueryOptions.add(new QueryOption("select", value));
        return (<#=methodClass + currentName#>Request)this;
    }

    public I<#=methodClass + currentName#>Request top(final int value) {
        this.mQueryOptions.add(new QueryOption("top", value+""));
        return (<#=methodClass + currentName#>Request)this;
    }

    public I<#=methodClass + currentName#>Request expand(final String value) {
        this.mQueryOptions.add(new QueryOption("expand", value));
        return (<#=methodClass + currentName#>Request)this;
    }

}
