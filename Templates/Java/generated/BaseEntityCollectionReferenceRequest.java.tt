<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = BaseTypeCollectionReferenceRequest(c);#>
<#=writer.WriteHeader()#>
<#=CreatAutogeneratedWarning()#>
<#=CreatePackageDef(host)#>

<#=CreateClassDef(BaseTypeCollectionReferenceRequest(c), "BaseCollectionRequest" + CollectionRequestGeneric(c), IBaseTypeCollectionReferenceRequest(c))#>

    /**
     * The request builder for this collection of <#=TypeName(c)#>
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param options The options for this request
     */
    public <#=BaseTypeCollectionReferenceRequest(c)#>(final String requestUrl, <#=IBaseClientType()#> client, final List<Option> options) {
        super(requestUrl, client, options, <#=BaseTypeCollectionResponse(c)#>.class, <#=ITypeCollectionPage(c)#>.class);
    }

    public void create(final <#=TypeName(c)#> new<#=TypeName(c)#>, final ICallback<<#=TypeName(c)#>> callback) {
<#       
        String prop = c.AsOdcmProperty().GetServiceCollectionNavigationPropertyForPropertyType().Name;
#>        
        final String requestUrl = getBaseRequest().getRequestUrl().toString();
        final ReferenceRequestBody body = new ReferenceRequestBody(getBaseRequest().getClient().getServiceRoot() + "/<#=prop#>/" + newDirectoryObject.id);
        new DirectoryObjectWithReferencesRequestBuilder(requestUrl, getBaseRequest().getClient(), /* Options */ null)
            .buildRequest()
            .create(newDirectoryObject, body, callback);
    }

    public <#=TypeName(c)#> create(final <#=TypeName(c)#> new<#=TypeName(c)#>) throws ClientException {
    
        final String requestUrl = getBaseRequest().getRequestUrl().toString();
        final ReferenceRequestBody body = new ReferenceRequestBody(getBaseRequest().getClient().getServiceRoot() + "/<#=prop#>/" + newDirectoryObject.id);
        return new DirectoryObjectWithReferencesRequestBuilder(requestUrl,getBaseRequest().getClient(), /* Options */ null)
                .buildRequest()
                .create(newDirectoryObject, body); 
    }

    public <#=ITypeCollectionReferenceRequest(c)#> select(final String value) {
        addQueryOption(new QueryOption("select", value));
        return (<#=TypeCollectionReferenceRequest(c)#>)this;
    }

    public <#=ITypeCollectionReferenceRequest(c)#> top(final int value) {
        addQueryOption(new QueryOption("top", value + ""));
        return (<#=TypeCollectionReferenceRequest(c)#>)this;
    }

}
