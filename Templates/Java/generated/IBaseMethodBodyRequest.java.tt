<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License.txt in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = IBaseTypeRequest(c);#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

import com.google.gson.JsonObject;
import com.google.gson.annotations.*;

<# var useAsyncMonitor = c.AsOdcmMethod().LongDescriptionContains("async"); #>
<#=CreateInterfaceDef(IBaseTypeRequest(c))#>

<# if (useAsyncMonitor) { #>
    void create(final ICallback<AsyncMonitor<<#=ReturnType(c)#>>> callback);

    AsyncMonitor<<#=ReturnType(c)#>> create() throws ClientException;
<# } else { #>
    void create(final ICallback<<#=ReturnType(c)#>> callback);

    <#=ReturnType(c)#> create() throws ClientException;
<# } #>

    <#=ITypeRequest(c)#> select(final String value) ;

    <#=ITypeRequest(c)#> top(final int value);

    <#=ITypeRequest(c)#> expand(final String value);
}
