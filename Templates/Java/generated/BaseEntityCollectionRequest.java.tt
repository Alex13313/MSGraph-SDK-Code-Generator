<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#
    OdcmProperty current = (OdcmProperty)currentType;
    var currentName = current.Name.ToUpperFirstChar();
    var propertyType = current.Type.Name.ToUpperFirstChar();
#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

/**
 * I am generated by IIBase<#=currentName#>CollectionRequest.java.tt
 */
 <#=CreateClassDef("Base" + currentName + "CollectionRequest", "BaseRequest", "IBase" + currentName + "CollectionRequest")#>
     public Base<#=currentName#>CollectionRequest(final String requestUrl, IOneDriveClient client, final List<Option> options) {
         super(requestUrl, client, options, <#=propertyType#>.class);
     }

     public void get(final ICallback<I<#=propertyType#>sCollectionPage> callback) {
         this.send(HttpMethod.GET, callback, null);
     }

     public I<#=propertyType#>sCollectionPage get() throws OneDriveClientException {
         return this.send(HttpMethod.GET, null);
     }

     public I<#=propertyType#>sCollectionRequest expand(final String value) {
         this.mQueryOptions.add(new QueryOption("expand", value));
         return (<#=propertyType#>sCollectionRequest)this;
     }

     public I<#=propertyType#>sCollectionRequest select(final String value) {
           this.mQueryOptions.add(new QueryOption("select", value));
           return (<#=propertyType#>sCollectionRequest)this;
     }

     public I<#=propertyType#>sCollectionRequest top(final int value) {
         this.mQueryOptions.add(new QueryOption("top", value + ""));
         return (<#=propertyType#>sCollectionRequest)this;
     }
}
