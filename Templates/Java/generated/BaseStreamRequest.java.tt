<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#
    OdcmProperty current = (OdcmProperty)currentType;
    var currentName = current.Name.ToUpperFirstChar();
    var propertyType = current.Type.Name.ToUpperFirstChar();
#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

import java.io.*;

/**
 * I am generated by BaseStreamRequest.java.tt (Might not be implemented)
 *
 * I extend the BaseRequest
 * I have an interface IBaseStreamRequest that is also auto generated
 * I have the full RU complement of functions
 */
<#=CreateClassDef("Base" + currentName + "Request", "BaseSteamRequest", "IBase" + currentName + "Request")#>
    public Base<#=currentName#>Request(String requestUrl, IOneDriveClient client, List<Option> options) {
        super(requestUrl, client, options, <#=propertyType#>.class);
    }

    public void get(final ICallback<InputStream> callback) {
        this.send(HttpMethod.GET, callback, null);
    }

    public InputStream get() throws OneDriveClientException {
       return this.send(HttpMethod.GET, null);
    }

    public void put(final OutputStream stream, final ICallback<<#=propertyType#>> callback) {
        this.send(HttpMethod.PUT, callback, stream);
    }

    public <#=propertyType#> put(final OutputStream stream) throws OneDriveClientException {
        return this.send(HttpMethod.PUT, stream);
    }
}
