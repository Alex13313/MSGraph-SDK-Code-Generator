<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#
    OdcmProperty current = (OdcmProperty)currentType;
    var currentName = current.Name.ToUpperFirstChar();
    var propertyName = current.Name.ToUpperFirstChar();
    var propertyClass = current.Class.Name.ToUpperFirstChar();
#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

import java.io.*;

/**
 * I am generated by BaseStreamRequest.java.tt (Might not be implemented)
 *
 * I extend the BaseRequest
 * I have an interface IBaseStreamRequest that is also auto generated
 * I have the full RU complement of functions
 */
<#=CreateClassDef("Base" + propertyClass + currentName + "Request", "BaseStreamRequest<" + propertyClass + ">", "IBase" + propertyClass + currentName + "Request")#>
    public Base<#=propertyClass + currentName#>Request(String requestUrl, IOneDriveClient client, List<Option> options) {
        super(requestUrl, client, options, <#=propertyClass#>.class);
    }

    public void get(final ICallback<InputStream> callback) {
        this.send(callback);
    }

    public InputStream get() throws ClientException {
       return this.send();
    }

    public void put(final byte[] fileContents, final ICallback<<#=propertyClass#>> callback) {
        this.send(fileContents, callback);
    }

    public <#=propertyClass#> put(final byte[] fileContents) throws ClientException {
        return this.send(fileContents);
    }
}
