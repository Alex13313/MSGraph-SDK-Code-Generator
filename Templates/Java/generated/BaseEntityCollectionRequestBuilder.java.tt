<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

<#=CreateClassDef(BaseTypeCollectionRequestBuilder(c), "BaseRequestBuilder", IBaseTypeCollectionRequestBuilder(c))#>

    /**
     * The request builder for this collection of <#=ClassTypeName(c)#>
     *
     * @param requestUrl The request url
     * @param client The service client
     * @param options The options for this request
     */
    public <#=BaseTypeCollectionRequestBuilder(c)#>(final String requestUrl, final IBaseClient client, final List<Option> options) {
        super(requestUrl, client, options);
    }

    public <#=ITypeCollectionRequest(c)#> buildRequest() {
        return buildRequest(getOptions());
    }

    public <#=ITypeCollectionRequest(c)#> buildRequest(final List<Option> options) {
        return new <#=TypeCollectionRequest(c)#>(getRequestUrl(), getClient(), options);
    }
<# if (true) { #>

    public <#=ITypeRequestBuilder(c)#> byId(final String id) {
        return new <#=TypeRequestBuilder(c)#>(getRequestUrlWithAdditionalSegment(id), getClient(), getOptions());
    }
<# } #>
}
