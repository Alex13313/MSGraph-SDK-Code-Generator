<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = IBaseTypeStreamRequest(c);#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

import java.io.*;

<#=CreateInterfaceDef(IBaseTypeStreamRequest(c), "IHttpStreamRequest")#>

    /**
     * Gets the contents of this stream
     *
     * @param callback The callback to be called after success or failure.
     */
    void get(final ICallback<InputStream> callback);

    /**
     * Gets the contents of this stream
     *
     * @return The stream that the caller needs to close.
     * @throws ClientException An exception occurs if there was an error while the request was sent.
     */
    InputStream get() throws ClientException;

    /**
     * Uploads to the stream
     *
     * @param fileContents The contents of the stream to upload.
     * @param callback The callback to be called after success or failure.
     */
    void put(final byte[] fileContents, final ICallback<<#=ClassTypeName(c)#>> callback);

    /**
     * Uploads to the stream
     *
     * @param fileContents The contents of the stream to upload.
     * @return The result of the upload.
     * @throws ClientException An exception occurs if there was an error while the request was sent.
     */
    <#=ClassTypeName(c)#> put(final byte[] fileContents) throws ClientException;
}
