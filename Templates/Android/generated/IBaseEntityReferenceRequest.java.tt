<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="BaseModel.template.tt"#>
<#@ output extension="\\" #>
<#host.TemplateName = IBaseTypeReferenceRequest(c);#>
<#=writer.WriteHeader()#>
<#=CreatePackageDef(host)#>

<#=CreateInterfaceDef(IBaseTypeReferenceRequest(c), "IHttpRequest")#>

    void delete(final ICallback<<#=TypeName(c)#>> callback);

    <#=TypeName(c)#> delete() throws ClientException;

<# if (c.GetFeatures().CanSelect) { #>
    /**
     * Sets the select clause for the request
     *
     * @param value The select clause
     * @return The updated request
     */
    <#=IBaseTypeReferenceRequest(c)#> select(final String value);

<# } #>
<# if (c.GetFeatures().CanExpand) { #>
    /**
     * Sets the expand clause for the request
     *
     * @param value The expand clause
     * @return The updated request
     */
    <#=IBaseTypeReferenceRequest(c)#> expand(final String value);

<# } #>
<# if (c.GetFeatures().CanUpdate) { #>
    /**
     * Puts the <#=TypeName(c)#>
     *
     * @param src<#=TypeName(c)#> The <#=TypeName(c)#> to PUT
     * @param callback The callback to be called after success or failure
     */
    void put(<#=TypeName(c)#> src<#=TypeName(c)#>, final ICallback<<#=TypeName(c)#>> callback);

	/**
	* Puts the <#=TypeName(c)#>
	* 
	* @param src<#=TypeName(c)#> The <#=TypeName(c)#> to PUT
	* @return The <#=TypeName(c)#>
	* @throws ClientException An exception occurs if there was an error while the request was sent
	*/
	<#=TypeName(c)#> put(<#=TypeName(c)#> src<#=TypeName(c)#>) throws ClientException;
<# } #>
}
