<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension="\\" #>
<#
    CustomT4Host host           = (CustomT4Host) Host;
    CodeWriterTypeScript writer = (CodeWriterTypeScript) host.CodeWriter;

    var model                   = host.CurrentModel;
    var entityTypes             = model.GetEntityTypes();
    var enumTypes               = model.GetEnumTypes();
    var complexTypes            = model.GetComplexTypes();
#>
<#= writer.WriteHeader() #>
declare namespace MicrosoftGraph {

<# foreach(var enumType in enumTypes) { #>
  type <#= writer.UpperCaseFirstChar(enumType.Name) #> = <#= enumType.GetEnumValues() #>
<# } #>
<#
  foreach(var entityType in entityTypes)
    {
        var methods = entityType.Methods;
#>

  interface <#= writer.UpperCaseFirstChar(entityType.Name) #><# if (entityType.Base != null) { #> extends <#=  writer.UpperCaseFirstChar(entityType.Base.Name) #><# }#> {
<# foreach(var prop in entityType.Properties.ToList()) { #>
    <#=  prop.Name #>?: <#= prop.GetTypeString() #>
<# } #>
  }
    <#
    }
#>
<#
  foreach(var complexType in complexTypes)
  {
#>

  interface <#= writer.UpperCaseFirstChar(complexType.Name)#> {
<# foreach(var prop in complexType.Properties) { #>
      <#= prop.Name #>?: <#= prop.GetTypeString() #>
<# } #>
  }
<# } #>
}

declare module "msgraph" {
    export = MicrosoftGraph;
}