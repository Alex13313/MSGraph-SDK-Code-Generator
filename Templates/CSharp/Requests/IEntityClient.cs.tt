<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedCSharp.template.tt"#>
<#
var entityContainer = model.EntityContainer;
var clientName = entityContainer.Name.ToCheckedCase() + "Client";
#>

namespace <#=entityContainer.Namespace.GetNamespaceName()#>
{

    /// <summary>
    /// The interface I<#=clientName#>.
    /// </summary>
    public partial interface I<#=clientName#> : IBaseClient
    {
    <#

    foreach(var prop in model.EntityContainer.Properties)
    {
        var sanitizedPropName = prop.Name.ToCheckedCase().GetSanitizedPropertyName();
        var propName = string.Concat(entityContainer.Name.ToCheckedCase(), prop.Name.ToCheckedCase());

        if (prop.IsCollection())
        {
    #>

        /// <summary>
        /// Gets the <#=propName#> request builder.
        /// </summary>
        I<#=propName#>CollectionRequestBuilder <#=sanitizedPropName#> { get; }
    <#
        }
        else
        {
        
        var propType = prop.Type.Name.ToCheckedCase();
    #>

        /// <summary>
        /// Gets the <#=propName#> request builder.
        /// </summary>
        I<#=propType#>RequestBuilder <#=sanitizedPropName#> { get; }
    <#
        }
    }
    #>

    }
}
