<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="IEntityRequest.Base.template.tt"#>
<#
OdcmClass entity = host.CurrentType.AsOdcmClass();
var entityName = entity.Name.ToCheckedCase();
var entityRequest = entityName + "Request";

var prop = host.CurrentType.AsOdcmProperty();
var projection = (prop != null) ? prop.Projection : null;
var canCreate = projection == null || projection.SupportsInsert();
var canDelete = projection == null || projection.SupportsDelete();
var canUpdate = projection == null || projection.SupportsUpdate();
var canExpand = projection == null || projection.SupportsExpand();

#>

namespace <#=this.GetNamespaceName(entity)#>
{
    using System;
    using System.IO;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;

    <#=this.GetEntityRequestInterfaceDefinition(entity)#>
    {
    <# if (canCreate) { #>
        <#=this.GetEntityCreateAsyncMethod(entity)#>
    <# } #>

    <# if (canDelete) { #>
        <#=this.GetEntityDeleteAsyncMethod(entity)#>
    <# } #>

        <#=this.GetEntityGetAsyncMethod(entity)#>

    <# if (canUpdate) { #>
        <#=this.GetEntityUpdateAsyncMethod(entity)#>
    <# } #>

    <# if (canExpand) { #>
        <#=this.GetEntityExpandMethod(entity)#>
    <# } #>

        <#=this.GetEntitySelectMethod(entity)#>
    }
}
