<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="IRequestBuilder.Base.template.tt"#>
<#+

public string GetInterfaceDefinition(OdcmProperty odcmProperty)
{
    return this.GetInterfaceDefinition(this.GetPropertyCollectionRequestBuilderName(odcmProperty));
}

public string GetReferenceInterfaceDefinition(OdcmProperty odcmProperty)
{
    return this.GetInterfaceDefinition(this.GetPropertyCollectionReferenceRequestBuilderName(odcmProperty));
}

public string GetCollectionRequestMethod(OdcmProperty odcmProperty)
{
    return this.GetRequestMethod(this.GetPropertyCollectionRequestName(odcmProperty));
}

public string GetCollectionRequestMethodWithOptions(OdcmProperty odcmProperty)
{
    return this.GetRequestMethodWithOptions(this.GetPropertyCollectionRequestName(odcmProperty));
}

public string GetCollectionReferenceRequestMethod(OdcmProperty odcmProperty)
{
    var stringBuilder = new StringBuilder();
    stringBuilder.Append(this.GetRequestMethodHeader());
    stringBuilder.Append(Environment.NewLine);
    stringBuilder.AppendFormat("        I{0} Request();", this.GetPropertyCollectionReferenceRequestName(odcmProperty));
    return stringBuilder.ToString();
}

public string GetCollectionReferenceRequestMethodWithOptions(OdcmProperty odcmProperty)
{
    var stringBuilder = new StringBuilder();
    stringBuilder.Append(this.GetRequestMethodWithOptionsHeader());     
    stringBuilder.Append(Environment.NewLine);
    stringBuilder.AppendFormat("        I{0} Request(IList<Option> options);", this.GetPropertyCollectionReferenceRequestName(odcmProperty));
    return stringBuilder.ToString();
}

public string GetCollectionIndexRequestBuilder(OdcmProperty odcmProperty)
{
    var stringBuilder = new StringBuilder();
    var propTypeName = this.GetPropertyTypeName(odcmProperty);
    var entityRequestBuilder = this.GetPropertyTypeRequestBuilderName(odcmProperty);
    
    stringBuilder.Append("/// <summary>");
    stringBuilder.Append(Environment.NewLine);
    stringBuilder.AppendFormat("        /// Gets an <see cref=\"I{0}\"/> for the specified {1}.", entityRequestBuilder, propTypeName);
    stringBuilder.Append(Environment.NewLine);
    stringBuilder.Append("        /// </summary>");
    stringBuilder.Append(Environment.NewLine);
    stringBuilder.AppendFormat("        /// <param name=\"id\">The ID for the {0}.</param>", propTypeName);
    stringBuilder.Append(Environment.NewLine);
    stringBuilder.AppendFormat("        /// <returns>The <see cref=\"I{0}\"/>.</returns>", entityRequestBuilder);
    stringBuilder.Append(Environment.NewLine);
    stringBuilder.AppendFormat("        I{0} this[string id] {{ get; }}", entityRequestBuilder);
    
    return stringBuilder.ToString();
}

public string GetCollectionReferenceRequestBuilder(OdcmProperty odcmProperty)
{
    var propertyClass = odcmProperty.Class.AsOdcmClass();
    if (propertyClass.Kind != OdcmClassKind.Service && odcmProperty.IsNavigation() && !odcmProperty.ContainsTarget)
    {
        var stringBuilder = new StringBuilder();
        var entityReferenceRequestBuilder = this.GetPropertyReferenceTypeRequestBuilderName(odcmProperty);
        
        stringBuilder.Append(Environment.NewLine);
        stringBuilder.Append("        /// <summary>");
        stringBuilder.Append(Environment.NewLine);
        stringBuilder.AppendFormat("        /// Gets an <see cref=\"I{0}\"/> for the references in the collection.", entityReferenceRequestBuilder);
        stringBuilder.Append(Environment.NewLine);
        stringBuilder.Append("        /// </summary>");
        stringBuilder.Append(Environment.NewLine);
        stringBuilder.AppendFormat("        /// <returns>The <see cref=\"I{0}\"/>.</returns>", entityReferenceRequestBuilder);
        stringBuilder.Append(Environment.NewLine);
        stringBuilder.AppendFormat("        I{0} {0} {{ get; }}", entityReferenceRequestBuilder);
        stringBuilder.Append(Environment.NewLine);
        
        return stringBuilder.ToString();
    }
    
    return string.Empty;
}

#>
