<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>
<#
var prop = host.CurrentType.AsOdcmProperty();
var method = host.CurrentType.AsOdcmMethod();
OdcmType innerEntity = null;
if (prop != null)
{
    innerEntity = prop.Type;
}
else if (method != null)
{
    innerEntity = method.ReturnType;
}
#>

#import "<#=innerEntity.GetCollectionTypeString()#>.h"
<#
if (!innerEntity.IsSystem() && innerEntity.IsComplex())
{
#>
#import "<#=GetObjCTypeIdentifier(innerEntity)#>.h"
<#
}
#>

@implementation <#=innerEntity.GetCollectionTypeString()#>

+ (<#=innerEntity.GetCollectionTypeString()#> *) fromMSCollection:(<#=GetStaticCollectionObject()#> *)collection {
    <#=innerEntity.GetCollectionTypeString()#> *col = [[<#=innerEntity.GetCollectionTypeString()#> alloc] init];
    col.value = collection.value;
    col.nextLink = collection.nextLink;
    col.additionalData = collection.additionalData;
    return col;
}

- (<#=GetObjCTypeForVarDeclaration(innerEntity)#>) objectAtIndex:(NSUInteger)index {
<#
    if(IsNSJSONSerializable(innerEntity))
    {
#>
    return [super.value objectAtIndex:index];
<#
    }
    else
    {
        if (prop != null)
        {
    #>
    return <#=GetHydratedPropertyFromNSJSONSerializableExpression("[super.value objectAtIndex:index]",prop)#>;
    <#
        }
        else
        {
    #>
    return <#=GetHydratedPropertyFromNSJSONSerializableExpression("[super.value objectAtIndex:index]",method)#>;
    <#
        }
    }
#>

}

- (NSUInteger) count {
    return [super.value count];
}

@end
