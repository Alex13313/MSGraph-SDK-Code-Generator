<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information. #>
<# // Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License.txt in the project root for license information. #>
<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>
<#
var entityName = writer.GetPrefix()  + "Client";
#>

#import "<#=writer.GetPrefix()#>ODataEntities.h"

@implementation <#=entityName#>

<#
var containerProps = model.EntityContainer.Properties;

foreach(var prop in containerProps)
{
    var propName = writer.GetPrefix() + prop.Name.ToUpperFirstChar();
    var propType = writer.GetPrefix() + prop.Type.Name.ToUpperFirstChar();

	if(prop.IsCollection())
	{
#>

-(<#=propName#>CollectionRequestBuilder *)<#=prop.Name#>
{
    return [[<#=propName#>CollectionRequestBuilder alloc] initWithURL:[self.baseURL URLByAppendingPathComponent:@"<#=prop.Name#>"] 
             <#=prop.Type.GetTypeString().ToSpaces()#><#="CollectionRequestBuilder alloc]     ".ToSpaces()#>client:self];
}

-(<#=propType#>RequestBuilder*)<#=prop.Name#>:(NSString*)<#=prop.Type.Name#>
{
    return [[self <#=prop.Name#>] <#=prop.Type.Name#>:<#=prop.Type.Name#>];
}

<#
    }
    else
    {
#>
    -(<#=propType#>RequestBuilder *) <#=prop.Name#>
    {
    return [[<#=propType#>RequestBuilder alloc] initWithURL:[self.baseURL URLByAppendingPathComponent:@"<#=prop.Name#>"] 
             <#=prop.Type.GetTypeString().ToSpaces()#><#="RequestBuilder alloc]     ".ToSpaces()#>client:self];
    }
<#
    }
}
#>

@end
