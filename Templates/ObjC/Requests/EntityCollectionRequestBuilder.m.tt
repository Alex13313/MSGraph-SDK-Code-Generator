<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>
<#

var prop = host.CurrentType.AsOdcmProperty();
var innerEntity = prop.Type;

var collectionNamer = prop.IsReference() ? "CollectionWithReference" : "Collection";

var propName = writer.GetPrefix() + prop.Class.Name.ToUpperFirstChar() +prop.Name.ToUpperFirstChar() + collectionNamer + "RequestBuilder";
var propRequestName = writer.GetPrefix() + prop.Class.Name.ToUpperFirstChar() + prop.Name.ToUpperFirstChar() + collectionNamer +"Request";
var innerEntityType = writer.GetPrefix() + innerEntity.Name.ToUpperFirstChar();
var entityRequest = innerEntityType + "Request";
var entityRequestBuilder = innerEntityType + "RequestBuilder";

#>

#import "<#=writer.GetPrefix()#>ODataEntities.h"

@implementation <#=propName#> : <#=writer.GetStaticCodePrefix()+collectionNamer#>RequestBuilder

- (<#=propRequestName#>*) request
{
    return [self requestWithOptions:nil];
}

- (<#=propRequestName#> *)requestWithOptions:(NSArray *)options
{
    return [[<#=propRequestName#> alloc] initWithURL:self.requestURL options:options client:self.client];
}
<#
if (!(innerEntity is OdcmComplexClass))
{
#>
- (<#=entityRequestBuilder#> *)<#=innerEntity.Name.ToLowerFirstChar()#>:(NSString *)<#=innerEntity.Name.ToLowerFirstChar()#>
{
    return [[<#=entityRequestBuilder#> alloc] initWithURL:[self.requestURL URLByAppendingPathComponent:<#=innerEntity.Name.ToLowerFirstChar()#>]
                                                   client:self.client];
}
<#
}
#>

@end
