<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>

<#
var containerProps = model.EntityContainer.Properties;
var entityName = writer.GetPrefix() + "Client"; 

#>

#import "<#=entityName#>.h"
#import "<#=entityName#>+Authentication.h"
#import "<#=writer.GetStaticCodePrefix()#>AccountStoreProtocol.h"

/**
 ## Default Application Configuration Notes
 @warning When using this category, you must have called one of the setAppId methods (described below) before you create a client object.
 */
@interface <#=entityName#> (DefaultConfiguration)

/**
 The account Id of the user.
 */
@property (readonly) NSString *accountId;

/**
 Loads the current client if one exists, if one doesn't it will pop UI and ask for login info.
 @param completion The completion handler to be called when an authenticated client is created.
 @see authenticatedClientWithCompletion: or loadCurrentClient:
 @warning To load a client from disk, you must provide an accountStore. @see <#=writer.GetStaticCodePrefix()#>AccountStoreProtocol.h The default store is the ODAccountStore object.
 @warning This method may invoke the UI. It will present a view controller on the root view controller, unless one is specified in the default app configuration.
 */
+ (void)clientWithCompletion:(<#=entityName#>AuthenticationCompletion)completion;

/**
 Creates and authenticates an <#=entityName#> object.
 @param completion The completion handler to be called when authentication is completed.
        The completion handler will be called with an <#=entityName#> object OR an NSError object. One will always be nil.
 @warning This method may invoke the UI. It will present a view controller on the root view controller, unless one is specified in the default app configuration.
 */
+ (void)authenticatedClientWithCompletion:(<#=entityName#>AuthenticationCompletion)completion;

/**
 Sets the OneDrive microsoftAccounnt app information. @see https://dev.onedrive.com/auth/msa_oauth.htm
 @param  microsoftAccounntAppId The application id. Must not be nil.
 @param  microsoftAccounntScopes The scopes to be used with authentication. Must not be nil.
 @param  microsoftAccounntFlags A user defined dictionary to be passed through to the client when authenticated using the OneDrive microsoftAccounnt authentication flow.
 */
+ (void)setMicrosoftAccountAppId:(NSString *)microsoftAccounntAppId
                          scopes:(NSArray *)microsoftAccounntScopes
                           flags:(NSDictionary *)microsoftAccounntFlags;

/**
 Calls setmicrosoftAccounntAppId:scopes:flags: with no flags.
 @param  microsoftAccounntAppId The application id. Must not be nil.
 @param  microsoftAccounntScopes The scopes to be used with authentication. Must not be nil.
 */
+ (void)setMicrosoftAccountAppId:(NSString *)microsoftAccounntAppId
                          scopes:(NSArray *)microsoftAccounntScopes;



/**
 Calls setActiveDirectoryAppId:capability:redirectURL with OneDrive for business Capability (MyFiles) 
 @param activeDirectoryAppId The applicaiton id. Must not be nil.
 @param redirectURL the redirect url to be used with Azure Active Directory. Most not be nil.
 */
+ (void)setActiveDirectoryAppId:(NSString *)activeDirectoryAppId
                    redirectURL:(NSString *)activeDirectoryRedirectURL;

/**
 Calls setActiveDirectoryAppId:capability:resouceId:apiEndpoint:redirectURL:flags: with the given information.
 @param activeDirectoryAppId The application id. Must not be nil.
 @param redirectURL the direct url to be used with Azure Active Directory. Must not be nil
 */
+ (void)setActiveDirectoryAppId:(NSString *)activeDirectoryAppId
                    redirectURL:(NSString *)activeDirectoryRedirectURL
                          flags:(NSDictionary *)flags;
/**
 Calls setActiveDirectoryAppId:capability:redirectURL:flags: with nil flags.
 @param  activeDirectoryAppId The application id. Must not be nil.
 @param  activeDirectoryCapabilty The capability to use for active directoy. Must not be nil.
 @param  activeDirectoryRedirectURL The redirect url to be used with Azure Active Directory. Must not be nil.
 */
+ (void)setActiveDirectoryAppId:(NSString *)activeDirectoryAppId
                     capability:(NSString *)activeDirectoryCapability
                    redirectURL:(NSString *)activeDirectoryRedirectURL;

/**
 Calls setActiveDirectoryAppId:capability:redirectURL:flags: with nil flags.
 @param  activeDirectoryAppId The application id. Must not be nil.
 @param  activeDirectoryResouceId The active directory reosuce id. Must not be nil.
 @param  activeDirectoryApiEndpoint The active directory api endpoint. Must not be nil.
 @param  activeDirectoryRedirectURL The redirect url to be used with Azure Active Directory. Must not be nil.
 */
+ (void)setActiveDirectoryAppId:(NSString *)activeDirectoryAppId
                     resourceId:(NSString *)activeDirectoryResourceId
                    apiEndpoint:(NSString *)activeDirectoryApiEndpoint
                    redirectURL:(NSString *)activeDirectoryRedirectURL;

/**
 Sets the OneDrive for Business app information.
 @param  activeDirectoryAppId The application id. Must not be nil.
 @param  activeDirectoryCapability The active directory capability.  Must not be nil if resouceId and apiEndpoint are nil.
 @param  activeDirectoryResouceId The active directroy resouceId.  Must not be nil if capability is nil. 
 @param  activeDirectoryApiEndpoint The active directory ApiEndpoing. Must not be nil if capability is nil.
 @param  activeDirectoryRedirectURL The redirect url to be used with Azure Active Directory. Must not be nil.
 @param  activeDirectoryFlags A user defined dictionary to be passed through to the client when authenticated using the OneDrive for Business authentication flow.
 @see https://dev.onedrive.com/auth/aad_oauth.htm
 */
+ (void)setActiveDirectoryAppId:(NSString *)activeDirectoryAppId
                     capability:(NSString *)activeDirectoryCapability
                     resourceId:(NSString *)activeDirectoryResourceId
                    apiEndpoint:(NSString *)activeDirectoryApiEndpoint
                    redirectURL:(NSString *)activeDirectoryRedirectURL
                          flags:(NSDictionary *)activeDirectoryFlags;

/**
 Calls the setActiveDirectoryAppId and setMicrosoftAccountAppId methods to set both microsoftAccounnt and Business application info.
 @param  microsoftAccounntAppId The application id. Must not be nil.
 @param  microsoftAccounntScopes The scopes to be used with authentication. Must not be nil.
 @param  microsoftAccounntFlags A user defined dictionary to be passed through to the client when authenticated using the OneDrive microsoftAccounnt authentication flow.
 @param  activeDirectoryAppId The application id. Must not be nil.
 @param  activeDirectoryCapabilty The active directroy capability must not be nil
 @param  activeDirectoryRedirectURL The redirect url to be used with Azure Active Directory. Must not be nil.
 @param  activeDirectoryFlags A user defined dictionary to be passed through to the client when authenticated using the OneDrive for Business authentication flow.
 */
+ (void)setMicrosoftAccountAppId:(NSString *)microsoftAccounntAppId
          microsoftAccountScopes:(NSArray *)microsoftAccounntScopes
           microsoftAccountFlags:(NSDictionary *)microsoftAccounntFlags
           activeDirectoryAppId:(NSString *)activeDirectoryAppId
       activeDirectoryCapability:(NSString *)activeDirectoryCapability
     activeDirectoryRedirectURL:(NSString *)activeDirectoryRedirectURL
           activeDirectoryFlags:(NSDictionary *)activeDirectoryFlags;
/**
 Calls the setActiveDirectoryAppId and setMicrosoftAccountAppId methods to set both microsoftAccounnt and Business application info.
 @param  microsoftAccounntAppId The application id. Must not be nil.
 @param  microsoftAccounntScopes The scopes to be used with authentication. Must not be nil.
 @param  microsoftAccounntFlags A user defined dictionary to be passed through to the client when authenticated using the OneDrive microsoftAccounnt authentication flow.
 @param  activeDirectoryAppId The application id. Must not be nil.
 @param  activeDirectoryResouceId The active directroy resource Id. Must not be nil.
 @param  activeDirectoryApiEndpoint The active directroy Api Endpoint. Must not be nil.
 @param  activeDirectoryRedirectURL The redirect url to be used with Azure Active Directory. Must not be nil.
 @param  activeDirectoryFlags A user defined dictionary to be passed through to the client when authenticated using the OneDrive for Business authentication flow.
 */
+ (void)setMicrosoftAccountAppId:(NSString *)microsoftAccounntAppId
          microsoftAccountScopes:(NSArray *)microsoftAccounntScopes
           microsoftAccountFlags:(NSDictionary *)microsoftAccounntFlags
            activeDirectoryAppId:(NSString *)activeDirectoryAppId
       activeDirectoryResourceId:(NSString *)activeDirectoryResourceId
      activeDirectoryApiEndpoint:(NSString *)activeDirectoryApiEndpoint
      activeDirectoryRedirectURL:(NSString *)activeDirectoryRedirectURL
            activeDirectoryFlags:(NSDictionary *)activeDirectoryFlags;
/**
 Sets the authentication provider.
 @param authProvider The auth provider.
 @see <#=writer.GetStaticCodePrefix()#>AuthProvider
 */
+ (void)setAuthProvider:(id <<#=writer.GetStaticCodePrefix()#>AuthProvider>)authProvider;

/**
 Sets the accountStore.
 @param accountStore The accountStore.
 @see ODAccountStoreProtocol
 */
+ (void)setAccountStore:(id <<#=writer.GetStaticCodePrefix()#>AccountStore>)accountStore;

/**
 Sets the httpProvider.
 @see ODHttpProvider
 */
+ (void)setHttpProvider:(id <<#=writer.GetStaticCodePrefix()#>HttpProvider>)httpProvider;

/**
 Sets the parent view controller for the authentication view controller.
 @param parentAuthController The parentViewController to set.
 */
+ (void)setParentAuthController:(UIViewController *)parentAuthController;

/**
 Sets the default logger.
 @param logger The logger to set.
 @see ODLogger
 */
+ (void)setLogger:(id <<#=writer.GetStaticCodePrefix()#>Logger>)logger;

/**
 Loads the current client if there is one.
 @return The current client.
 @return nil if there is no current client.
 @warning You must provide an ODAccountStore to read from by using setAccountStore, if you choose not to use the default store.
 */
+ (<#=entityName#> *)loadCurrentClient;

/**
 Sets the current client.
 @param client The client to set.
 */
+ (void)setCurrentClient:(<#=entityName#> *)client;

/**
 Loads all of the clients, if they exist.
 @return An array of clients. May be empty if there are no clients.
 @warning You must provide an ODAccountStore to read from by using setAccountStore, if you choose not use the default store.
 */
+ (NSArray *)loadClients;

/**
 Loads the `<#=entityName#>` for the given account id.
 */
+ (<#=entityName#> *)loadClientWithAccountId:(NSString *)accountId;

/**
 Sets the log level for the clients logger.
 @param level The level of the logger.
 */
- (void)setLogLevel:(<#=writer.GetStaticCodePrefix()#>LogLevel)level;

@end
