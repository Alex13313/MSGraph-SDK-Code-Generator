<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ include file="SharedObjC.template.tt"#>
<#
var prop = host.CurrentType.AsOdcmProperty();
var innerEntity = prop.Type;
var innerEntityType = writer.GetPrefix() + innerEntity.Name.ToUpperFirstChar();

var collectionNamer = prop.IsReference() ? "CollectionWithReference" : "Collection";

var propName = writer.GetPrefix() + prop.Class.Name.ToUpperFirstChar() + prop.Name.ToUpperFirstChar() + collectionNamer + "RequestBuilder";
var entityRequestBuilder = innerEntityType + "RequestBuilder";
var entityRequest = writer.GetPrefix() + prop.Class.Name.ToUpperFirstChar() + prop.Name.ToUpperFirstChar() + collectionNamer + "Request";
var classStringBuilder = new StringBuilder("@class " + entityRequest);
classStringBuilder.Append(", " + entityRequestBuilder + ";");

#>
<#=classStringBuilder.ToString()#>

#import "<#=writer.GetPrefix()#>Models.h"
#import "<#=writer.GetStaticCodePrefix()#>CollectionRequestBuilder.h"

@interface <#=propName#> : <#=writer.GetStaticCodePrefix()#>CollectionRequestBuilder

- (<#=entityRequest#> *)request;

- (<#=entityRequest#> *)requestWithOptions:(NSArray *)options;

<#
if (!(innerEntity is OdcmComplexClass))
{
#>
- (<#=entityRequestBuilder#> *)<#=innerEntity.Name.ToLowerFirstChar()#>:(NSString *)<#=innerEntity.Name.ToLowerFirstChar()#>;

<#
}
#>

@end
